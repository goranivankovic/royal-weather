[{"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\index.js":"1","E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\App.js":"2","E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\components\\Weather.js":"3"},{"size":220,"mtime":1611518470040,"results":"4","hashOfConfig":"5"},{"size":245,"mtime":1611518448917,"results":"6","hashOfConfig":"5"},{"size":15918,"mtime":1611700198130,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"c34e9t",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\index.js",[],["16","17"],"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\App.js",[],"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\components\\Weather.js",["18","19","20","21","22","23","24","25","26","27"],"import React, { Component } from 'react'\r\nimport kisobran from '../img/rainbow.jpg'\r\nimport {Container,Row,Col,Form, FormGroup, FormControl ,Button,Card,Navbar,Nav} from 'react-bootstrap';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nconst x =['novi sad','zagreb','madrid','maribor','podgorica','belgrad']\r\n\r\nconst t =Math.floor(Math.random()*x.length)\r\n\r\n\r\n\r\n\r\nexport default class Weather extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            city:x[t],\r\n            temp:[],\r\n            description:[],\r\n            nowImage:[],\r\n            wind:[],\r\n            humidity:[],\r\n\r\n\r\n            fistDayDate:[],\r\n            secondDayDate:[],\r\n            threedDayDate:[],\r\n            fourDayDate:[],\r\n            fiveDayDate:[],\r\n\r\n            fistDayImage:[],\r\n            secondDayImage:[],\r\n            threedDayImage:[],\r\n            fourDayImage:[],\r\n            fiveDayImage:[],\r\n\r\n\r\n            fistDayMaxTemp:[],\r\n            secondDayMaxTemp:[],\r\n            thredDayMaxTemp:[],\r\n            fourDayMaxTemp:[],\r\n            fiveDayMaxTemp:[],\r\n\r\n\r\n            fistDayPressure:[],\r\n            secondDayPressure:[],\r\n            thredDayPressure:[],\r\n            fourDayPressure:[],\r\n            fiveDayPressure:[],\r\n\r\n            fistDayDescripton:[],\r\n            secondDayDescripton:[],\r\n            thredDayDescripton:[],\r\n            fourDayDescripton:[],\r\n            fiveDayDescripton:[],\r\n\r\n            fistDayWind:[],\r\n            secondDayWind:[],\r\n            threedDayWind:[],\r\n            fourDayWind:[],\r\n            fiveDayWind:[],\r\n\r\n\r\n            userInput:[]\r\n\r\n         \r\n\r\n        }\r\n        this.getUserInput=this.getUserInput.bind(this)\r\n        this.sendUserCity=this.sendUserCity.bind(this)\r\n       \r\n    \r\n      \r\n    \r\n\r\n    }\r\n\r\n\r\nasync  componentDidMount(){\r\n  const inputClassValue = document.querySelector('.inputClassValue')\r\n\r\n  axios.all([axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`),\r\n           axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.state.city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`)])\r\n          \r\n     .then(axios.spread((firstResponse, secondResponse) => {  \r\n        //  console.log(firstResponse.data,secondResponse.data);\r\n        inputClassValue.value=''\r\n\r\n         setTimeout(()=>{\r\n\r\n          this.setState({\r\n\r\n            fistDayDate:secondResponse.data.list[6].dt_txt,\r\n            secondDayDate:secondResponse.data.list[14].dt_txt,\r\n            threedDayDate:secondResponse.data.list[22].dt_txt,\r\n            fourDayDate:secondResponse.data.list[30].dt_txt,\r\n            fiveDayDate:secondResponse.data.list[38].dt_txt,\r\n\r\n\r\n            fistDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[6].weather[0].icon}.png`,\r\n            secondDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[14].weather[0].icon}.png`,\r\n            threedDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[22].weather[0].icon}.png`,\r\n            fourDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[30].weather[0].icon}.png`,\r\n            fiveDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[38].weather[0].icon}.png`,\r\n\r\n\r\n           \r\n            fistDayMaxTemp:secondResponse.data.list[6].main.temp_max,\r\n           secondDayMaxTemp:secondResponse.data.list[14].main.temp_max,\r\n            thredDayMaxTemp:secondResponse.data.list[22].main.temp_max,\r\n            fourDayMaxTemp:secondResponse.data.list[30].main.temp_max,\r\n            fiveDayMaxTemp:secondResponse.data.list[38].main.temp_max,\r\n\r\n\r\n\r\n            fistDayPressure:secondResponse.data.list[6].main.pressure,\r\n            secondDayPressure:secondResponse.data.list[14].main.pressure,\r\n            thredDayPressure:secondResponse.data.list[22].main.pressure,\r\n            fourDayPressure:secondResponse.data.list[30].main.pressure,\r\n            fiveDayPressure:secondResponse.data.list[38].main.pressure,\r\n\r\n\r\n            fistDayDescripton:secondResponse.data.list[6].weather[0].description,\r\n            secondDayDescripton:secondResponse.data.list[14].weather[0].description,\r\n            thredDayDescripton:secondResponse.data.list[22].weather[0].description,\r\n            fourDayDescripton:secondResponse.data.list[30].weather[0].description,\r\n            fiveDayDescripton:secondResponse.data.list[38].weather[0].description,\r\n\r\n            fistDayWind:secondResponse.data.list[6].wind.speed,\r\n            secondDayWind:secondResponse.data.list[14].wind.speed,\r\n            threedDayWind:secondResponse.data.list[22].wind.speed,\r\n            fourDayWind:secondResponse.data.list[30].wind.speed,\r\n            fiveDayWind:secondResponse.data.list[38].wind.speed,\r\n\r\n\r\n          \r\n\r\n\r\n\r\n              \r\n\r\n          })\r\n\r\n\r\n         },100)\r\n\r\n         this.setState({\r\n           city:firstResponse.data.name,\r\n           temp:firstResponse.data.main.temp,\r\n           description:firstResponse.data.weather[0].description,\r\n           nowImage:firstResponse.data.weather[0].icon,\r\n           wind:firstResponse.data.wind.speed,\r\n           humidity:firstResponse.data.main.humidity\r\n\r\n     \r\n     \r\n        });\r\n    \r\n\r\n\r\n     }))\r\n     .catch(error => console.log(error));\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n\r\ngetUserInput(e){\r\n  this.setState({\r\n    userInput:e.target.value\r\n  })\r\n  \r\n\r\n\r\n}\r\n\r\nsendUserCity(){\r\n\r\n   const inputClassValue = document.querySelector('.inputClassValue')\r\n axios.all([axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.userInput}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`),\r\n axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.state.userInput}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`)])\r\n\r\n.then(axios.spread((firstResponse, secondResponse) => {  \r\n// console.log(firstResponse.data,secondResponse.data);\r\n inputClassValue.value=''\r\nsetTimeout(()=>{\r\n\r\nthis.setState({\r\n\r\n  fistDayDate:secondResponse.data.list[6].dt_txt,\r\n  secondDayDate:secondResponse.data.list[14].dt_txt,\r\n  threedDayDate:secondResponse.data.list[22].dt_txt,\r\n  fourDayDate:secondResponse.data.list[30].dt_txt,\r\n  fiveDayDate:secondResponse.data.list[38].dt_txt,\r\n\r\n\r\n  fistDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[6].weather[0].icon}.png`,\r\n  secondDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[14].weather[0].icon}.png`,\r\n  threedDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[22].weather[0].icon}.png`,\r\n  fourDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[30].weather[0].icon}.png`,\r\n  fiveDayImage:`https://openweathermap.org/img/w/${secondResponse.data.list[38].weather[0].icon}.png`,\r\n\r\n\r\n \r\n  fistDayMaxTemp:secondResponse.data.list[6].main.temp_max,\r\n secondDayMaxTemp:secondResponse.data.list[14].main.temp_max,\r\n  thredDayMaxTemp:secondResponse.data.list[22].main.temp_max,\r\n  fourDayMaxTemp:secondResponse.data.list[30].main.temp_max,\r\n  fiveDayMaxTemp:secondResponse.data.list[38].main.temp_max,\r\n\r\n\r\n\r\n  fistDayPressure:secondResponse.data.list[6].main.pressure,\r\n  secondDayPressure:secondResponse.data.list[14].main.pressure,\r\n  thredDayPressure:secondResponse.data.list[22].main.pressure,\r\n  fourDayPressure:secondResponse.data.list[30].main.pressure,\r\n  fiveDayPressure:secondResponse.data.list[38].main.pressure,\r\n\r\n\r\n  fistDayDescripton:secondResponse.data.list[6].weather[0].description,\r\n  secondDayDescripton:secondResponse.data.list[14].weather[0].description,\r\n  thredDayDescripton:secondResponse.data.list[22].weather[0].description,\r\n  fourDayDescripton:secondResponse.data.list[30].weather[0].description,\r\n  fiveDayDescripton:secondResponse.data.list[38].weather[0].description,\r\n\r\n  fistDayWind:secondResponse.data.list[6].wind.speed,\r\n  secondDayWind:secondResponse.data.list[14].wind.speed,\r\n  threedDayWind:secondResponse.data.list[22].wind.speed,\r\n  fourDayWind:secondResponse.data.list[30].wind.speed,\r\n  fiveDayWind:secondResponse.data.list[38].wind.speed,\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n})\r\n\r\n\r\n},100)\r\n\r\nthis.setState({\r\n city:firstResponse.data.name,\r\n temp:firstResponse.data.main.temp,\r\n description:firstResponse.data.weather[0].description,\r\n nowImage:firstResponse.data.weather[0].icon,\r\n wind:firstResponse.data.wind.speed,\r\n humidity:firstResponse.data.main.humidity\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n}))\r\n.catch(error=>{ console.log(error)\r\n\r\n  window.location='/'\r\n})\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\nconst bac={\r\n  backgrundColor:\"red\",\r\n \r\n}\r\n  const borderRadius={\r\n    borderRadius:\"15px\",\r\n    border:\"1px solid\",\r\n    marginBottom:'10px'\r\n   \r\n   \r\n  }\r\n   \r\n      \r\n        return ( \r\n            \r\n             <div className=\"mainWeatherDiv\">\r\n         <img src={kisobran} alt=\"adada\" className=\"slika\" /> \r\n             \r\n            \r\n    \r\n               <Container className=\"weatherNav\" fluid>\r\n                  \r\n                 <Row>\r\n                  \r\n                   <Col className=\"col-sm-4\">\r\n                 \r\n                     <h5 className=\"text-light\">Weather App</h5>\r\n                   </Col>\r\n                   <Col className=\"col-sm-8 col-12 allForm\">\r\n                  \r\n                   <Form inline className=\"float-right\">\r\n                     <FormControl type=\"text\"className=\"inputClassValue\" onChange={this.getUserInput}></FormControl>\r\n                     <Button className=\"inputClassValue\" onClick={this.sendUserCity}>Search</Button>\r\n\r\n                   </Form>\r\n                   </Col>\r\n                 </Row>\r\n               </Container>\r\n           \r\n    \r\n          \r\n               <Container className=\"weatherHouers\" fluid>\r\n                 <Row>\r\n                   <Col className=\"col-12\" >\r\n                   <br></br>\r\n                   <br></br>\r\n               <br></br>\r\n                 \r\n                   \r\n                   <h2 className=\"text-center text-light\">{this.state.city.slice(0,1).toString().toUpperCase()+this.state.city.slice(1,15)}</h2>\r\n                   <h1 className=\"text-center text-light\">{Math.floor(this.state.temp)+ '\\xB0'}</h1>\r\n                   <h3 className=\"text-center text-light\">{this.state.description.slice(0,1).toString().toUpperCase()+this.state.description.slice(1,15)}</h3>\r\n                   <h4 className=\"text-center text-light\">Wind:{this.state.wind} m/s</h4>\r\n                   <h3 className=\"text-center text-light\">Humidity:{this.state.humidity} %</h3>\r\n                   \r\n                   </Col>\r\n                 </Row>\r\n\r\n               </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n               <Container className=\"fiveDaysDiv\" fluid>\r\n               \r\n            \r\n                 <Row className=\"fiveDasysDivRows\">\r\n                \r\n                   <Col  lg={2} md={6} sm={10} style={borderRadius} >\r\n\r\n                   <h3 className=\"text-center text-black\">{this.state.fistDayDate.slice(8,10)}.{this.state.fistDayDate.slice(6,7)} | {this.state.secondDayDate.slice(0,4)}</h3>\r\n                   <h3 className=\"text-center text-black\">{this.state.fistDayDate.slice(10,16)}</h3>\r\n                   <h5 className=\"text-center text-black\"><img src={this.state.fistDayImage} /></h5>\r\n                   <h3 className=\"text-center text-black\">{Math.floor(this.state.fistDayMaxTemp)+'\\xB0'}</h3>\r\n                   <h5 className=\"text-center text-black\">{this.state.fistDayDescripton}</h5>\r\n                   <h5 className=\"text-center text-black\">Wind:{this.state.fistDayWind} m/s</h5>\r\n                   <h5 className=\"text-center text-black\">Press:{this.state.fistDayPressure} mb </h5>\r\n           \r\n\r\n\r\n\r\n                   \r\n                   </Col>\r\n\r\n\r\n                   <Col style={borderRadius} lg={2} md={6} sm={10}  >\r\n                     \r\n                   <h3 className=\"text-center text-black\">{this.state.secondDayDate.slice(8,10)}.{this.state.secondDayDate.slice(6,7)} | {this.state.secondDayDate.slice(0,4)}</h3>\r\n                   <h3 className=\"text-center text-black\">{this.state.secondDayDate.slice(10,16)}</h3>\r\n                   <h5 className=\"text-center text-black\"><img src={this.state.secondDayImage} /></h5>\r\n                   <h3 className=\"text-center text-black\">{Math.floor(this.state.secondDayMaxTemp)+'\\xB0'}</h3>\r\n                   <h5 className=\"text-center text-black\">{this.state.fistDayDescripton}</h5>\r\n                   <h5 className=\"text-center text-black\">Wind:{this.state.fistDayWind} m/s</h5>\r\n                   <h5 className=\"text-center text-black\">Press:{this.state.secondDayPressure} mb </h5>\r\n\r\n                  \r\n\r\n                    \r\n\r\n                   \r\n                   </Col>\r\n\r\n                   <Col  style={borderRadius} lg={2} md={6}  sm={10} >\r\n\r\n                       \r\n                   <h3 className=\"text-center text-black\">{this.state.threedDayDate.slice(8,10)}.{this.state.threedDayDate.slice(6,7)} | {this.state.secondDayDate.slice(0,4)}</h3>\r\n                   <h3 className=\"text-center text-black\">{this.state.threedDayDate.slice(10,16)}</h3>\r\n                   <h5 className=\"text-center text-black\"><img src={this.state.threedDayImage} /></h5>\r\n                   <h3 className=\"text-center text-black\">{Math.floor(this.state.thredDayMaxTemp)+'\\xB0'}</h3>\r\n                   <h5 className=\"text-center text-black\">{this.state.thredDayDescripton}</h5>\r\n                   <h5 className=\"text-center text-black\">Wind:{this.state.threedDayWind} m/s</h5>\r\n                   <h5 className=\"text-center text-black\">Press:{this.state.thredDayPressure} mb</h5>\r\n\r\n                     \r\n\r\n                   \r\n                   </Col>\r\n\r\n\r\n                   <Col style={borderRadius}lg={2} md={6}  sm={10}>\r\n                          \r\n                   <h3 className=\"text-center text-black\">{this.state.fourDayDate.slice(8,10)}.{this.state.fourDayDate.slice(6,7)} | {this.state.secondDayDate.slice(0,4)}</h3>\r\n                   <h3 className=\"text-center text-black\">{this.state.fourDayDate.slice(10,16)}</h3>\r\n                   <h5 className=\"text-center text-black\"><img src={this.state.fourDayImage} /></h5>\r\n                   <h3 className=\"text-center text-black\">{Math.floor(this.state.fourDayMaxTemp)+'\\xB0'}</h3>\r\n                   <h5 className=\"text-center text-black\">{this.state.fourDayDescripton}</h5>\r\n                   <h5 className=\"text-center text-black\">Wind:{this.state.fourDayWind} m/s</h5>\r\n                   <h5 className=\"text-center text-black\">Press:{this.state.fourDayPressure} mb</h5>\r\n                     \r\n                     \r\n\r\n                   \r\n                   </Col>\r\n\r\n\r\n                   <Col style={borderRadius} lg={2} md={6} sm={10} >\r\n\r\n                   <h3 className=\"text-center text-black\">{this.state.fiveDayDate.slice(8,10)}.{this.state.fiveDayDate.slice(6,7)} |  {this.state.secondDayDate.slice(0,4)}</h3>\r\n                   <h3 className=\"text-center text-black\">{this.state.fiveDayDate.slice(10,16)}</h3>\r\n                   <h5 className=\"text-center text-black\"><img src={this.state.fiveDayImage} /></h5>\r\n                   <h3 className=\"text-center text-black\">{Math.floor(this.state.fiveDayMaxTemp)+'\\xB0'}</h3>\r\n                   <h5 className=\"text-center text-black\">{this.state.fiveDayDescripton}</h5>\r\n                   <h5 className=\"text-center text-black\">Wind:{this.state.fiveDayWind} m/s</h5>\r\n                   <h5 className=\"text-center text-black\">Press:{this.state.fiveDayPressure} mb</h5>\r\n                     \r\n\r\n                   \r\n                   </Col>\r\n\r\n                 \r\n\r\n\r\n\r\n                 </Row>\r\n               </Container>\r\n               <br></br>\r\n               <br></br>\r\n             \r\n         \r\n            \r\n            </div>\r\n             \r\n            \r\n           \r\n        )\r\n    }\r\n}\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":3,"column":33,"nodeType":"34","messageId":"35","endLine":3,"endColumn":42},{"ruleId":"32","severity":1,"message":"36","line":3,"column":64,"nodeType":"34","messageId":"35","endLine":3,"endColumn":68},{"ruleId":"32","severity":1,"message":"37","line":3,"column":69,"nodeType":"34","messageId":"35","endLine":3,"endColumn":75},{"ruleId":"32","severity":1,"message":"38","line":3,"column":76,"nodeType":"34","messageId":"35","endLine":3,"endColumn":79},{"ruleId":"32","severity":1,"message":"39","line":283,"column":7,"nodeType":"34","messageId":"35","endLine":283,"endColumn":10},{"ruleId":"40","severity":1,"message":"41","line":362,"column":59,"nodeType":"42","endLine":362,"endColumn":96},{"ruleId":"40","severity":1,"message":"41","line":379,"column":59,"nodeType":"42","endLine":379,"endColumn":98},{"ruleId":"40","severity":1,"message":"41","line":397,"column":59,"nodeType":"42","endLine":397,"endColumn":98},{"ruleId":"40","severity":1,"message":"41","line":413,"column":59,"nodeType":"42","endLine":413,"endColumn":96},{"ruleId":"40","severity":1,"message":"41","line":429,"column":59,"nodeType":"42","endLine":429,"endColumn":96},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'bac' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]